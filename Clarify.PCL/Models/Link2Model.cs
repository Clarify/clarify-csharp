/*
 * Clarify.PCL
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 10/06/2014
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Clarify.PCL;

namespace Clarify.PCL.Models
{
    public class Link2Model : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private HrefModel self;
        private HrefModel first;
        private HrefModel last;
        private HrefModel next;
        private HrefModel prev;
        private List<HrefModel> items;
        private CuriesModel curies;

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("self")]
        public HrefModel Self 
        { 
            get 
            {
                return this.self; 
            } 
            set 
            {
                this.self = value;
                onPropertyChanged("Self");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("first")]
        public HrefModel First 
        { 
            get 
            {
                return this.first; 
            } 
            set 
            {
                this.first = value;
                onPropertyChanged("First");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("last")]
        public HrefModel Last 
        { 
            get 
            {
                return this.last; 
            } 
            set 
            {
                this.last = value;
                onPropertyChanged("Last");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("next")]
        public HrefModel Next 
        { 
            get 
            {
                return this.next; 
            } 
            set 
            {
                this.next = value;
                onPropertyChanged("Next");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("prev")]
        public HrefModel Prev 
        { 
            get 
            {
                return this.prev; 
            } 
            set 
            {
                this.prev = value;
                onPropertyChanged("Prev");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("items")]
        public List<HrefModel> Items 
        { 
            get 
            {
                return this.items; 
            } 
            set 
            {
                this.items = value;
                onPropertyChanged("Items");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("curies")]
        public CuriesModel Curies 
        { 
            get 
            {
                return this.curies; 
            } 
            set 
            {
                this.curies = value;
                onPropertyChanged("Curies");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 